{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifFridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifFridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEXC,mBAAS,IAFE,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAoBhD,OACI,sBAAMC,SAbW,SAAEC,GAEnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OAFAc,QAAQC,IAAIN,EAAGC,EAAMV,GAGjB,sBAAKgB,UAAU,8CAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,4BAAKA,QCLJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECCb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WACP1B,EAASC,GACJ0B,MAAM,SAAAC,GAECH,EAAS,CACLjB,KAAKoB,EACLL,SAAS,SAI1B,CAACtB,IAEGuB,EDlB2BK,CAAc5B,GAAnCa,EAFwB,EAE7BN,KAAce,EAFe,EAEfA,QAEtB,OACI,qCACI,qBAAIJ,UAAU,yCAAd,cAA0DlB,EAA1D,OAEEsB,GAAW,mBAAGJ,UAAU,oFAAb,wBAEb,qBAAKA,UAAU,YAAf,SAGQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIC,aEf3BkB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAU9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCjBpC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2526c300.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue ] = useState('')\r\n\r\n    const handleInputChange = ( e ) => { \r\n        setInputValue(e.target.value)     \r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=dr1PB92Us8bMNlpqPGmRRE0pYWWIWmIa`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifFridItem = ( {id, title, url} ) => {\r\n\r\n    console.log(id,title,url)\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__slideInLeft\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifFridItem } from './GifFridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images , loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__slideInLeft\"> { category } </h3>\r\n\r\n            { loading && <p className=\" animate__animated animate__flash animate__infinite \tinfinite animate__slow \t1s\">Loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifFridItem \r\n                            key = { img.id }\r\n                            { ...img }\r\n                        />                      \r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n \r\n    const [state, setState] = useState({ \r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                 \r\n                    setState({\r\n                        data:imgs,\r\n                        loading: false\r\n                    })\r\n               \r\n            } )\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}\r\n","import React,{ useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n    // const handleAdd = () => {\r\n\r\n    //     setCategories(cats => [...categories, 'Naruto']);\r\n\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}